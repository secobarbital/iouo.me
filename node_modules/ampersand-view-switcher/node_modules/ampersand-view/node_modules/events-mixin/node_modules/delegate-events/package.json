{
  "name": "delegate-events",
  "description": "Event delegation component",
  "version": "1.1.0",
  "browser": {
    "event": "component-event"
  },
  "dependencies": {
    "closest": "*",
    "component-event": "*"
  },
  "devDependencies": {
    "browserify": "^3.33.0"
  },
  "keywords": [
    "event",
    "events",
    "delegate",
    "delegation"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/HenrikJoreteg/delegate.git"
  },
  "scripts": {
    "test": "browserify test/test.js > test/test.bundle.js && echo 'Now open test/index.html in a browser to test'"
  },
  "readme": "\n# delegate\n\n  Low-level event delegation component. Forked from component/delegate for use with browserify.\n\n## Installation\n\n    $ npm install delegate-events\n\n## Example\n\n```js\nvar delegate = require('delegate-events');\nvar ul = document.querySelector('ul');\nvar n = 0;\n\nvar fn = delegate.bind(ul, 'li a', 'click', function(e){\n  console.log(e.target);\n  console.log(e.delegateTarget); // => \"<a>\"\n  if (++n == 3) {\n    console.log('unbind');\n    delegate.unbind(ul, 'click', fn, false);\n  }\n}, false);\n```\n\n## API\n\n### .bind(el, selector, type, callback, [capture])\n\n  Bind and return a callback which may be passed to `.unbind()`.\n\n### .unbind(el, type, callback, [capture])\n\n  Unbind.\n\n## Tests\n\n* Run `npm test`.\n* Open `test/index.html` in a browser.\n* Open the js console and verify that interacting with the elements works as they say they should.\n\n## License\n\n  MIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/HenrikJoreteg/delegate/issues"
  },
  "homepage": "https://github.com/HenrikJoreteg/delegate",
  "_id": "delegate-events@1.1.0",
  "dist": {
    "shasum": "92c7eafcbc034c4d16e79859b9d18939358a0c9b"
  },
  "_from": "delegate-events@^1.1.0",
  "_resolved": "https://registry.npmjs.org/delegate-events/-/delegate-events-1.1.0.tgz"
}
