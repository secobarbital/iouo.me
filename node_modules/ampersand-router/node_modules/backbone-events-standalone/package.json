{
  "name": "backbone-events-standalone",
  "description": "Standalone version of Backbone.Events",
  "version": "0.2.2",
  "author": {
    "name": "Nicolas Perriault",
    "email": "nicolas@perriault.net"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/n1k0/backbone-events-standalone.git"
  },
  "license": "MIT",
  "keywords": [
    "backbone",
    "events"
  ],
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.8.x",
    "chai": "1.5.x",
    "jshint": "2.x",
    "underscore": "1.4.x",
    "grunt": "0.4.x",
    "grunt-contrib-uglify": "0.2.x"
  },
  "scripts": {
    "test": "mocha"
  },
  "readme": "backbone-events-standalone\n==========================\n\n[![Build Status](https://travis-ci.org/n1k0/backbone-events-standalone.png)](https://travis-ci.org/n1k0/backbone-events-standalone)\n\nThis is an extraction of the [Events] module of [Backbone] which can be used\nstandalone (no external dependency), in the browser or in a nodejs environment.\n\n## Oh dear. Why another EventEmitter?\n\nThis project started because I appreciate the `Backbone.Events` interface &\nfeatures while I wanted to keep using it within non-DOM environments (think a\n[Social API Web Worker] for example).\n\nI've ported the [original Backbone.Events tests] to [mocha] & [chai] so I can\nrun them within a [nodejs] environment and ensure the extracted API actually\nworks as expected without the burden of setting up continuous integration of\nbrowser tests.\n\n## Installation\n\n### Bower (for browser use)\n\n```\n$ bower install backbone-events-standalone\n```\n\n### NPM (node)\n\n```\n$ npm install backbone-events-standalone\n```\n\n## Usage\n\n### Standard browser use\n\n```html\n<script src=\"backbone-events-standalone.js\"></script>\n<script>\n  // use BackboneEvents\n</script>\n```\n\n**Notes:**\n\n- You may want to use the minified version stored in `backbone-events-standalone.min.js`.\n- Using Bower, files are usually available within `bower_components/backbone-events-standalone`\n\n### AMD\n\n```js\nrequire([\"backbone-events-standalone\"], function(BackboneEvents) {\n  // ...\n});\n```\n\n### In nodejs/browserify\n\n```js\nvar BackboneEvents = require(\"backbone-events-standalone\");\n```\n\n### API\n\nThe `BackboneEvents#mixin` method helps extending any object or prototype to add eventing\nsupport to it:\n\n```js\nvar myEventEmitter = BackboneEvents.mixin({});\nmyEventEmitter.on(\"foo\", console.log).trigger(\"foo\", \"hello emitter\");\n\n// alternatively\nfunction Plop() {}\nBackboneEvents.mixin(Plop.prototype);\n(new Plop()).on(\"foo\", console.log).trigger(\"foo\", \"hello emitter\");\n```\n\n`BackboneEvents` API & usage is the same as [Backbone.Events].\n\n## Test\n\n```\n$ npm test\n```\n\n## License\n\nMIT\n\n## Credits\n\n[Jeremy Ashkenas](http://ashkenas.com/), Backbone author\n\n[Events]: http://backbonejs.org/#Events\n[Backbone.Events]: http://backbonejs.org/#Events\n[Backbone]: http://backbonejs.org/\n[mocha]: (http://visionmedia.github.io/mocha/)\n[chai]: http://chaijs.com/\n[nodejs]: nodejs.org/\n[original Backbone.Events tests]: https://github.com/jashkenas/backbone/blob/699fe3271262043bb137bae97bd0003d6d193f27/test/events.js\n[Social API Web Worker]: https://developer.mozilla.org/en-US/docs/Social_API/Service_worker_API_reference\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/n1k0/backbone-events-standalone/issues"
  },
  "homepage": "https://github.com/n1k0/backbone-events-standalone",
  "_id": "backbone-events-standalone@0.2.2",
  "_from": "backbone-events-standalone@0.2.2"
}
