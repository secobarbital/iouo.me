{
  "name": "ampersand-class-extend",
  "description": "JS class extension tool for enabling easily extending prototype with multiple objects.",
  "version": "1.0.0",
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "bugs": {
    "url": "https://github.com/ampersandjs/ampersand-class-extend/issues"
  },
  "dependencies": {
    "extend-object": "^1.0.0"
  },
  "devDependencies": {
    "tape": "~2.12.3"
  },
  "homepage": "https://github.com/ampersandjs/ampersand-class-extend",
  "keywords": [
    "ampersand",
    "inheritance",
    "class"
  ],
  "license": "MIT",
  "main": "ampersand-class-extend.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/ampersandjs/ampersand-class-extend"
  },
  "scripts": {
    "test": "node test/main.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/9..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# ampersand-class-extend\n\nHelper function for setting up prototype chains for subclasses.\n\nLargely copied out of Backbone, but modified to enable extending a prototype with multiple mixins at once.\n\n## browser support\n\n[![browser support](https://ci.testling.com/ampersandjs/ampersand-class-extend.png)\n](https://ci.testling.com/ampersandjs/ampersand-class-extend)\n\n## install\n\n```\nnpm install ampersand-class-extend\n```\n\n## usage\n\n\nYour base object module might look something like this:\n\n```javascript\nvar extend = require('ampersand-class-extend');\n\n\n// your base object\nfunction YourConstructor() {}\n\n// simply attach it directly to the object constructor\nYourConstructor.extend = extend;\n\n// export it\nmodule.exports = YourConstructor;\n\n```\n\nThen in a file using said constructor:\n\n```javascript\nvar YourConstructor = require('./your-constructor');\nvar mixinMethods = require('some-other-methods');\nvar otherMixinMethods = require('even-more-methods');\n\n\n// Nowe we add some more stuff and export a modified constructor \n// (we can pass in as many other objects containing methods as we want).\nmodule.exports = YourConstructor.extend(mixinMethods, otherMixinMethods, {\n    yetAnotherMethod: function () {\n        // do something\n    }\n});\n```\n\nNow, when creating instances of the subclass, they'll have all the mixins while still passing `instanceof` checks for both the parent and the subclass.\n\n## credit\n\nMost of the credit goes to Jeremy Ashkenas and the other authors of Backbone.js.\n\nModified to be standalone Common JS and to allow you to pass multiple extend objects by [@HenrikJoreteg](http://twitter.com/henrikjoreteg).\n\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "ampersand-class-extend@1.0.0",
  "dist": {
    "shasum": "2f24b88a7f06505518d2b0624ac70a0a0f48f67c"
  },
  "_from": "ampersand-class-extend@^1.0.0",
  "_resolved": "https://registry.npmjs.org/ampersand-class-extend/-/ampersand-class-extend-1.0.0.tgz"
}
