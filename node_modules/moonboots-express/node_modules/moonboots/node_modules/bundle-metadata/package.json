{
  "name": "bundle-metadata",
  "description": "extract metadata about a browserify bundle",
  "version": "1.0.1",
  "homepage": "https://github.com/dominictarr/bundle-metadata",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/bundle-metadata.git"
  },
  "dependencies": {
    "sha1sum": "0.0.1",
    "through": "~2.3.3",
    "optimist": "~0.4.0",
    "JSONStream": "~0.6.4"
  },
  "bin": {
    "bundle-metadata": "./index.js"
  },
  "devDependencies": {},
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "license": "MIT",
  "readme": "# bundle-metadata\n\nGather some metadata of a browserify bundle, & sort the files,\nso that a hash of the bundle will be consistent.\n\n## Examples\n\n### bundle bundle-metadata and save meta.json\n\n```\nnpm install -g module-deps bundle-metadata browser-pack\n\ncd ~/dev/bundle-metadata\n\nmodule-deps index.js | bundle-metadata --meta meta.json | browser-pack > bundle.js\ncat meta.json\n```\n\n### from the api, use like this:\n``` js\nmdeps(entry)\n.pipe(meta()\n  .on('meta', function (meta) {\n    console.error(meta)\n  })\n).pipe(browserPack())\n.pipe(process.stdout)\n```\n\n### as a browserify command\n\n```\nbrowserify -c 'bundle-metadata --meta meta.json' index.js > bundle.js\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/dominictarr/bundle-metadata/issues"
  },
  "_id": "bundle-metadata@1.0.1",
  "dist": {
    "shasum": "9f158fce5ed06ebc74a0221b9ad82c90a34e4fd8"
  },
  "_from": "bundle-metadata@^1.0.1",
  "_resolved": "https://registry.npmjs.org/bundle-metadata/-/bundle-metadata-1.0.1.tgz"
}
