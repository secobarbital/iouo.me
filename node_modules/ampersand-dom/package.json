{
  "name": "ampersand-dom",
  "description": "Super light-weight DOM manipulation lib.",
  "version": "1.2.1",
  "author": {
    "name": "'Henrik Joreteg'",
    "email": "henrik@andyet.net"
  },
  "bugs": {
    "url": "https://github.com/ampersandjs/ampersand-dom/issues"
  },
  "devDependencies": {
    "browserify": "~4.1.8",
    "run-browser": "~1.3.1",
    "tap-spec": "^0.2.0",
    "tape": "^2.13.2",
    "tape-run": "~0.1.1",
    "tape-suite": "^0.2.1"
  },
  "directories": {
    "test": "test"
  },
  "homepage": "https://github.com/ampersandjs/ampersand-dom",
  "keywords": [
    "dom",
    "binding"
  ],
  "license": "MIT",
  "main": "ampersand-dom.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/ampersandjs/ampersand-dom"
  },
  "scripts": {
    "start": "run-browser test/index.js",
    "test": "browserify test/index.js | tape-run | tap-spec"
  },
  "testling": {
    "files": "test/index.js",
    "browsers": [
      "ie/8..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# ampersand-dom\n\nMinimal util-layer for applying transformations to DOM.\n\nIt's a pretty thin layer on top of DOM APIs.\n\nIt has zero dependencies.\n\n## install\n\n```\nnpm install ampersand-dom\n```\n\n## browser support\n[![testling badge](https://ci.testling.com/AmpersandJS/ampersand-dom.png)](https://ci.testling.com/AmpersandJS/ampersand-dom)\n\n## falsy values\n\nWhen setting something to a falsy value: `NaN`, `undefined`, `null`, and `false` all become `''`. However, `0` becomes `\"0\"` in order to allow setting `0` as the text content of an element.\n\n## example\n\nHere are all the methods and their usage:\n\n```javascript\n\nvar dom = require('ampersand-dom');\n\n\n// sets text content of element\ndom.text(el, 'set text content');\n\n// uses classList if available\ndom.addClass(el, 'someclass');\ndom.hasClass(el, 'someclass'); // => true\ndom.removeClass(el, 'someclass');\n\n// removes old if found, adds new\ndom.switchClass(el, 'oldclass', 'newclass');\n\n// makes sure attribute (with no content) is added\n// if exists it will be cleared of content\ndom.addAttribute(el, 'checked');\n\n// completely removes attribute\ndom.removeAttribute(el, 'checked');\n\n// sets attribute to string value given, clearing any current value\ndom.setAttribute(el, 'value', 'the value');\n\n// sets display none\ndom.hide(el);\n\n// shows element, trying to determine it's default display state\n// based on tagname and getComputedStyle()\ndom.show(el);\n\n// sets inner HTML, takes string or DOM\ndom.html(el, '<div></div>');\n```\n\n## credits\n\nInitially created by [@HenrikJoreteg](http://twitter.com/henrikjoreteg) with much inspiration/discussion with [@philip_roberts](https://twitter.com/philip_roberts).\n\n## license\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "_id": "ampersand-dom@1.2.1",
  "dist": {
    "shasum": "88f53929a12cdf6312a9bdee969428bb197bca77"
  },
  "_from": "ampersand-dom@^1.2.1",
  "_resolved": "https://registry.npmjs.org/ampersand-dom/-/ampersand-dom-1.2.1.tgz"
}
