{
  "name": "ampersand-input-view",
  "description": "A view module for intelligently rendering and validating input. Works well with ampersand-form-view.",
  "version": "1.2.4",
  "author": {
    "name": "Henrik Joreteg",
    "email": "henrik@andyet.net"
  },
  "bugs": {
    "url": "https://github.com/ampersandjs/ampersand-input-view/issues"
  },
  "dependencies": {
    "ampersand-view": "^6.0.3"
  },
  "homepage": "https://github.com/ampersandjs/ampersand-input-view",
  "keywords": [
    "forms",
    "ampersand",
    "browser"
  ],
  "license": "MIT",
  "main": "ampersand-input-view.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/ampersandjs/ampersand-input-view"
  },
  "readme": "# ampersand-input-view\n\nA view module for intelligently rendering and validating input. Works well with [ampersand-form-view](https://github.com/AmpersandJS/ampersand-form-view).\n\nIt does the following:\n\n- Automatically shows/hides error messages based on tests\n- Will not show error messages pre-submit or it's never had a valid value. This lets people tab-through a form without triggering a bunch of error messages.\n- Live-validates to always report if in valid state, but only shows messages when sane to do so.\n\nIt's built on [ampersand-view](https://github.com/AmpersandJS/ampersand-view) so it can be extended with `extend` as you might expect.\n\n## install\n\n```\nnpm install ampersand-input-view\n```\n\n## example\n\n```javascript\nvar InputView = require('ampersand-input-view');\n\nvar field = new InputView({\n    // form input `name`\n    name: 'client_name',\n    // You can replace the built-in template with your own.\n    // just give it an html string. Make sure it has a single \"root\" element that contains:\n    //  - an `<input>` element\n    //  - an element with a `role=\"label\"` attribute\n    //  - an element with a `role=\"message-container\"` attribute (this we'll show/hide)\n    //  - an elememt with a `role=\"message-text\"` attribute (where message text goes for error)\n    template: // some HTML string\n    // Label name\n    label: 'App Name',\n    // Optional placeholder attribute\n    placeholder: 'My Awesome App',\n    // optinal intial value if it has one\n    value: 'hello',\n    // optional, this is the that will be \n    // replaced by this view. If you don't\n    // give it one, it will create one.\n    el: document.getElementByID('field'),\n    // whether or not this field is required\n    required: true, // true by default\n    // class to set on input when input is valid\n    validClass: 'input-valid', // <- that's the default\n    // type value to use for the input tag's type value\n    type: 'text',\n    // class to set on input when input is valid\n    invalidClass: 'input-invalid', // <- that's the default\n    // Message to use if error is that it's required\n    // but no value was set.\n    requiredMessage: 'This field is required.',\n    // An array of test functions. They will be called\n    // in order with the current input value and you should\n    // write your test and return the error message to show\n    // if the test fails. It also gets called with the field\n    // instance as it's `this` context.\n    tests: [\n        function (val) {\n            if (val.length < 5) return \"Must be 5+ characters.\";\n        }\n    ],\n    // optional, you can pass in the parent view explicitly\n    parent:  someViewInstance \n});\n\n// append it somewhere or use it in side an ampersand-form-view\ndocument.querySelector('form').appendChild(field.el);\n\n```\n\n## credits\n\nCreated by [@HenrikJoreteg](http://twitter.com/henrikjoreteg).\n\n## license\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "_id": "ampersand-input-view@1.2.4",
  "dist": {
    "shasum": "df7a76cff1952741c4f5a93f27afa3bd749af52e"
  },
  "_from": "ampersand-input-view@^1.2.3",
  "_resolved": "https://registry.npmjs.org/ampersand-input-view/-/ampersand-input-view-1.2.4.tgz"
}
